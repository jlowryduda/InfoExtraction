NYT20001217.2241.0165/NNP NEWS/NNP STORY/NNP 2000-12-17/CD 23:07:10/CD

(ROOT
  (FRAG
    (NP (NNP NYT20001217.2241.0165) (NNP NEWS) (NNP STORY))
    (NP (CD 2000-12-17) (CD 23:07:10))))

nn(STORY-3, NYT20001217.2241.0165-1)
nn(STORY-3, NEWS-2)
root(ROOT-0, STORY-3)
num(23:07:10-5, 2000-12-17-4)
dep(STORY-3, 23:07:10-5)

A3113/CD &Cx1f/NN ;/: taf-z/NN u/IN a/DT BC-AIRTRAVEL-TIPS-ART-NY/JJ 12-17/CD 0833/CD

(ROOT
  (NP
    (NP (CD A3113) (NN &Cx1f))
    (: ;)
    (NP
      (NP (NN taf-z))
      (PP (IN u)
        (NP (DT a) (JJ BC-AIRTRAVEL-TIPS-ART-NY) (CD 12-17) (CD 0833))))))

num(&Cx1f-2, A3113-1)
root(ROOT-0, &Cx1f-2)
dep(&Cx1f-2, taf-z-4)
det(0833-9, a-6)
amod(0833-9, BC-AIRTRAVEL-TIPS-ART-NY-7)
num(0833-9, 12-17-8)
prep_u(taf-z-4, 0833-9)

BC-AIRTRAVEL-TIPS-ART-NYT/NNP

(ROOT
  (NP (NNP BC-AIRTRAVEL-TIPS-ART-NYT)))

root(ROOT-0, BC-AIRTRAVEL-TIPS-ART-NYT-1)

SOME/NNP TIPS/NNP FOR/NNP TRAVELING/NNP BY/NNP AIR/.

(ROOT
  (NP (NNP SOME) (NNP TIPS) (NNP FOR) (NNP TRAVELING) (NNP BY) (. AIR)))

nn(BY-5, SOME-1)
nn(BY-5, TIPS-2)
nn(BY-5, FOR-3)
nn(BY-5, TRAVELING-4)
root(ROOT-0, BY-5)
punct(BY-5, AIR-6)

&LR/NNS ;/: [ART/NNP ADV/NNP :/: Photo/NNP _/NNP NYT8/NNP _/NNP is/VBZ being/VBG sent/VBN to/TO NYT/NNP photo/NNP clients/NNS ./.

(ROOT
  (FRAG
    (NP
      (NP (NNS &LR))
      (: ;)
      (NP (NNP [ART) (NNP ADV)))
    (: :)
    (S
      (NP (NNP Photo) (NNP _) (NNP NYT8) (NNP _))
      (VP (VBZ is)
        (VP (VBG being)
          (VP (VBN sent)
            (PP (TO to)
              (NP (NNP NYT) (NNP photo) (NNS clients)))))))
    (. .)))

root(ROOT-0, &LR-1)
nn(ADV-4, [ART-3)
dep(&LR-1, ADV-4)
nn(_-9, Photo-6)
nn(_-9, _-7)
nn(_-9, NYT8-8)
nsubjpass(sent-12, _-9)
aux(sent-12, is-10)
auxpass(sent-12, being-11)
dep(&LR-1, sent-12)
nn(clients-16, NYT-14)
nn(clients-16, photo-15)
prep_to(sent-12, clients-16)

Graphic/NNP is/VBZ being/VBG sent/VBN to/TO NYT/NNP graphics/NNS clients/NNS ./.

(ROOT
  (S
    (NP (NNP Graphic))
    (VP (VBZ is)
      (VP (VBG being)
        (VP (VBN sent)
          (PP (TO to)
            (NP (NNP NYT) (NNS graphics) (NNS clients))))))
    (. .)))

nsubjpass(sent-4, Graphic-1)
aux(sent-4, is-2)
auxpass(sent-4, being-3)
root(ROOT-0, sent-4)
nn(clients-8, NYT-6)
nn(clients-8, graphics-7)
prep_to(sent-4, clients-8)

Nonsubscribers/NNS can/MD make/VB one-time/JJ purchases/NNS by/IN calling/VBG 888-603-1036/CD or/CC 888-346-9867/CD .]/JJ &QL/NNS ;/: &UR/NNS ;/: By/NNP LAURENCE/NNP ZUCKERMAN/NNP &QC/NNP ;/: &LR/NNS ;/: &QL/NNS ;/: &UR/NNS ;/: c.2000/CD N.Y/NNP ./.

(ROOT
  (S
    (NP (NNS Nonsubscribers))
    (VP (MD can)
      (VP (VB make)
        (NP (JJ one-time) (NNS purchases))
        (PP (IN by)
          (S
            (VP (VBG calling)
              (NP (CD 888-603-1036)
                (CC or)
                (CD 888-346-9867))
              (NP
                (NP (JJ .]) (NNS &QL))
                (: ;)
                (NP
                  (NP (NNS &UR))
                  (: ;)
                  (PP (NNP By)
                    (NP (NNP LAURENCE) (NNP ZUCKERMAN) (NNP &QC))))
                (: ;)
                (NP (NNS &LR))
                (: ;)
                (NP (NNS &QL))
                (: ;)
                (NP (NNS &UR))
                (: ;)
                (NP
                  (NP (CD c.2000))
                  (NP (NNP N.Y)))))))))
    (. .)))

nsubj(make-3, Nonsubscribers-1)
aux(make-3, can-2)
root(ROOT-0, make-3)
amod(purchases-5, one-time-4)
dobj(make-3, purchases-5)
prepc_by(make-3, calling-7)
iobj(calling-7, 888-603-1036-8)
iobj(calling-7, 888-346-9867-10)
conj_or(888-603-1036-8, 888-346-9867-10)
amod(&QL-12, .]-11)
dobj(calling-7, &QL-12)
dep(&QL-12, &UR-14)
prep(&UR-14, By-16)
nn(&QC-19, LAURENCE-17)
nn(&QC-19, ZUCKERMAN-18)
dep(By-16, &QC-19)
dep(&QL-12, &LR-21)
dep(&QL-12, &QL-23)
dep(&QL-12, &UR-25)
dep(&QL-12, c.2000-27)
appos(c.2000-27, N.Y-28)

Times/NNP News/NNP Service/NNP &QC/NNP ;/: &LR/NNS ;/: &QL/NNP ;/:

(ROOT
  (NP
    (NP (NNP Times) (NNP News) (NNP Service) (NNP &QC))
    (PRN (: ;)
      (NP
        (NP (NNS &LR))
        (: ;)
        (NP (NNP &QL))))
    (: ;)))

nn(&QC-4, Times-1)
nn(&QC-4, News-2)
nn(&QC-4, Service-3)
root(ROOT-0, &QC-4)
dep(&QC-4, &LR-6)
dep(&LR-6, &QL-8)

Booking/VBG Your/PRP$ Ticket/NN :/:

(ROOT
  (S
    (VP (VBG Booking)
      (NP (PRP$ Your) (NN Ticket)))
    (: :)))

root(ROOT-0, Booking-1)
poss(Ticket-3, Your-2)
dobj(Booking-1, Ticket-3)

_/DT Fly/NNP nonstop/NN ./.

(ROOT
  (S
    (NP (DT _))
    (VP (NNP Fly)
      (NP (NN nonstop)))
    (. .)))

nsubj(nonstop-3, _-1)
dep(nonstop-3, Fly-2)
root(ROOT-0, nonstop-3)

The/DT fewer/JJR connections/NNS you/PRP make/VBP ,/, the/DT lower/VB the/DT chance/NN that/IN you/PRP will/MD suffer/VB a/DT delay/NN ./.

(ROOT
  (S
    (NP (DT The) (JJR fewer) (NNS connections))
    (PRN
      (S
        (NP (PRP you))
        (VP (VBP make)))
      (, ,))
    (NP (DT the))
    (VP (VB lower)
      (NP (DT the) (NN chance))
      (SBAR (IN that)
        (S
          (NP (PRP you))
          (VP (MD will)
            (VP (VB suffer)
              (NP (DT a) (NN delay)))))))
    (. .)))

det(connections-3, The-1)
amod(connections-3, fewer-2)
nsubj(lower-8, connections-3)
nsubj(make-5, you-4)
parataxis(lower-8, make-5)
nsubj(lower-8, the-7)
root(ROOT-0, lower-8)
det(chance-10, the-9)
dobj(lower-8, chance-10)
mark(suffer-14, that-11)
nsubj(suffer-14, you-12)
aux(suffer-14, will-13)
ccomp(lower-8, suffer-14)
det(delay-16, a-15)
dobj(suffer-14, delay-16)

_/DT Pick/NNP airports/NNS with/IN care/NN ./.

(ROOT
  (S
    (NP (DT _))
    (VP (NNP Pick)
      (NP (NNS airports))
      (PP (IN with)
        (NP (NN care))))
    (. .)))

nsubj(airports-3, _-1)
dep(airports-3, Pick-2)
root(ROOT-0, airports-3)
prep_with(airports-3, care-5)

If/IN you/PRP have/VBP to/TO connect/VB ,/, choose/VB the/DT least-congested/JJ airport/NN possible/JJ ;/: some/DT airports/NNS ,/, like/IN Chicago/NNP O'Hare/NNP and/CC La/NNP Guardia/NNP in/IN New/NNP York/NNP ,/, experience/NN chronic/JJ delays/NNS ./.

(ROOT
  (S
    (S
      (SBAR (IN If)
        (S
          (NP (PRP you))
          (VP (VBP have)
            (S
              (VP (TO to)
                (VP (VB connect)))))))
      (, ,)
      (VP (VB choose)
        (S
          (NP (DT the) (JJ least-congested) (NN airport))
          (ADJP (JJ possible)))))
    (: ;)
    (S
      (NP (DT some) (NNS airports))
      (, ,)
      (PP (IN like)
        (NP
          (NP (NNP Chicago) (NNP O'Hare))
          (CC and)
          (NP
            (NP (NNP La) (NNP Guardia))
            (PP (IN in)
              (NP
                (NP (NNP New) (NNP York))
                (, ,)
                (NP (NN experience) (JJ chronic) (NNS delays))))))))
    (. .)))

mark(have-3, If-1)
nsubj(have-3, you-2)
nsubj(connect-5, you-2)
advcl(choose-7, have-3)
aux(connect-5, to-4)
xcomp(have-3, connect-5)
root(ROOT-0, choose-7)
det(airport-10, the-8)
amod(airport-10, least-congested-9)
nsubj(possible-11, airport-10)
xcomp(choose-7, possible-11)
det(airports-14, some-13)
parataxis(choose-7, airports-14)
dep(airports-14, like-16)
nn(O'Hare-18, Chicago-17)
pobj(like-16, O'Hare-18)
nn(Guardia-21, La-20)
pobj(like-16, Guardia-21)
conj_and(O'Hare-18, Guardia-21)
nn(York-24, New-23)
prep_in(Guardia-21, York-24)
nn(delays-28, experience-26)
amod(delays-28, chronic-27)
appos(York-24, delays-28)

Take/NNP into/IN consideration/NN the/DT weather/NN and/CC the/DT season/NN ;/: an/DT airport/NN in/IN the/DT South/NNP might/MD have/VB fewer/JJR winter/NN snowstorms/NNS but/CC more/JJR spring/NN and/CC summer/NN thunderstorms/NNS ./.

(ROOT
  (S
    (NP
      (NP (NNP Take))
      (PP (IN into)
        (NP
          (NP
            (NP (NN consideration))
            (NP (DT the) (NN weather)))
          (CC and)
          (NP
            (NP (DT the) (NN season))
            (: ;)
            (NP
              (NP (DT an) (NN airport))
              (PP (IN in)
                (NP (DT the) (NNP South))))))))
    (VP (MD might)
      (VP (VB have)
        (NP
          (NP (JJR fewer) (NN winter) (NNS snowstorms))
          (PP (CC but)
            (NP (JJR more) (NN spring)
              (CC and)
              (NN summer) (NNS thunderstorms))))))
    (. .)))

nsubj(have-16, Take-1)
prep_into(Take-1, consideration-3)
det(weather-5, the-4)
dep(consideration-3, weather-5)
det(season-8, the-7)
prep_into(Take-1, season-8)
conj_and(consideration-3, season-8)
det(airport-11, an-10)
dep(season-8, airport-11)
det(South-14, the-13)
prep_in(airport-11, South-14)
aux(have-16, might-15)
root(ROOT-0, have-16)
amod(snowstorms-19, fewer-17)
nn(snowstorms-19, winter-18)
dobj(have-16, snowstorms-19)
prep(snowstorms-19, but-20)
amod(spring-22, more-21)
pobj(but-20, spring-22)
nn(thunderstorms-25, summer-24)
pobj(but-20, thunderstorms-25)
conj_and(spring-22, thunderstorms-25)

_/DT Check/NNP times/NNS between/IN connecting/VBG flights/NNS ./.

(ROOT
  (NP
    (NP (DT _) (NNP Check) (NNS times))
    (PP (IN between)
      (S
        (VP (VBG connecting)
          (NP (NNS flights)))))
    (. .)))

det(times-3, _-1)
nn(times-3, Check-2)
root(ROOT-0, times-3)
prepc_between(times-3, connecting-5)
dobj(connecting-5, flights-6)

Airlines/NNPS often/RB book/VB tight/JJ connections/NNS and/CC do/VBP not/RB take/VB responsibility/NN if/IN you/PRP miss/VBP yours/NNS ./.

(ROOT
  (S
    (NP (NNPS Airlines))
    (ADVP (RB often))
    (VP
      (VP (VB book)
        (NP (JJ tight) (NNS connections)))
      (CC and)
      (VP (VBP do) (RB not)
        (VP (VB take)
          (NP (NN responsibility))
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP miss)
                (NP (NNS yours))))))))
    (. .)))

nsubj(book-3, Airlines-1)
nsubj(take-9, Airlines-1)
advmod(book-3, often-2)
root(ROOT-0, book-3)
amod(connections-5, tight-4)
dobj(book-3, connections-5)
aux(take-9, do-7)
neg(take-9, not-8)
conj_and(book-3, take-9)
dobj(take-9, responsibility-10)
mark(miss-13, if-11)
nsubj(miss-13, you-12)
advcl(take-9, miss-13)
dobj(miss-13, yours-14)

Assume/JJ each/DT leg/NN of/IN your/PRP$ flight/NN will/MD arrive/VB late/RB ,/, and/CC book/NN connections/NNS that/WDT allow/VB ample/JJ time/NN ./.

(ROOT
  (S
    (NP
      (NP (JJ Assume) (DT each) (NN leg))
      (PP (IN of)
        (NP (PRP$ your) (NN flight))))
    (VP (MD will)
      (VP (VB arrive)
        (NP
          (NP (RB late))
          (, ,)
          (CC and)
          (NP
            (NP (NN book) (NNS connections))
            (SBAR
              (WHNP (WDT that))
              (S
                (VP (VB allow)
                  (NP (JJ ample) (NN time)))))))))
    (. .)))

amod(leg-3, Assume-1)
det(leg-3, each-2)
nsubj(arrive-8, leg-3)
poss(flight-6, your-5)
prep_of(leg-3, flight-6)
aux(arrive-8, will-7)
root(ROOT-0, arrive-8)
dobj(arrive-8, late-9)
nn(connections-13, book-12)
dobj(arrive-8, connections-13)
conj_and(late-9, connections-13)
nsubj(allow-15, connections-13)
rcmod(connections-13, allow-15)
amod(time-17, ample-16)
dobj(allow-15, time-17)

_/DT Check/NNP on-time/JJ records/NNS ./.

(ROOT
  (S
    (NP (DT _))
    (VP (NNP Check)
      (NP (JJ on-time) (NNS records)))
    (. .)))

nsubj(records-4, _-1)
dep(records-4, Check-2)
amod(records-4, on-time-3)
root(ROOT-0, records-4)

The/DT Transportation/NNP Department/NNP requires/VBZ major/JJ domestic/JJ airlines/NNS to/TO make/VB the/DT on-time/JJ record/NN for/IN every/NN flight/NN available/JJ to/TO consumers/NNS ./.

(ROOT
  (S
    (NP (DT The) (NNP Transportation) (NNP Department))
    (VP (VBZ requires)
      (NP (JJ major) (JJ domestic) (NNS airlines))
      (S
        (VP (TO to)
          (VP (VB make)
            (S
              (NP
                (NP (DT the) (JJ on-time) (NN record))
                (PP (IN for)
                  (NP (NN every) (NN flight))))
              (ADJP (JJ available)
                (PP (TO to)
                  (NP (NNS consumers)))))))))
    (. .)))

det(Department-3, The-1)
nn(Department-3, Transportation-2)
nsubj(requires-4, Department-3)
root(ROOT-0, requires-4)
amod(airlines-7, major-5)
amod(airlines-7, domestic-6)
dobj(requires-4, airlines-7)
nsubj(make-9, airlines-7)
aux(make-9, to-8)
xcomp(requires-4, make-9)
det(record-12, the-10)
amod(record-12, on-time-11)
nsubj(available-16, record-12)
nn(flight-15, every-14)
prep_for(record-12, flight-15)
xcomp(make-9, available-16)
prep_to(available-16, consumers-18)

You/PRP can/MD check/VB online/NN at/IN www.dot.gov/NN ./.

(ROOT
  (S
    (NP (PRP You))
    (VP (MD can)
      (VP (VB check)
        (PP (NN online)
          (PP (IN at)
            (NP (NN www.dot.gov))))))
    (. .)))

nsubj(check-3, You-1)
aux(check-3, can-2)
root(ROOT-0, check-3)
dep(check-3, online-4)
prep_at(check-3, www.dot.gov-6)

That/DT site/JJ also/RB reports/NNS each/DT airline/NN 's/POS on-time/JJ record/NN for/IN the/DT previous/JJ month/NN ./.

(ROOT
  (NP
    (NP (DT That)
      (ADJP (JJ site)
        (ADVP (RB also)))
      (NNS reports))
    (NP
      (NP
        (NP (DT each) (NN airline) (POS 's))
        (JJ on-time) (NN record))
      (PP (IN for)
        (NP (DT the) (JJ previous) (NN month))))
    (. .)))

det(reports-4, That-1)
amod(reports-4, site-2)
advmod(site-2, also-3)
root(ROOT-0, reports-4)
det(airline-6, each-5)
poss(record-9, airline-6)
amod(record-9, on-time-8)
dep(reports-4, record-9)
det(month-13, the-11)
amod(month-13, previous-12)
prep_for(record-9, month-13)

_/DT Travel/NNP on/IN off-peak/JJ days/NNS and/CC at/IN off-peak/JJ times/NNS ./.

(ROOT
  (NP
    (NP (DT _) (NNP Travel))
    (PP
      (PP (IN on)
        (NP (JJ off-peak) (NNS days)))
      (CC and)
      (PP (IN at)
        (NP (JJ off-peak) (NNS times))))
    (. .)))

det(Travel-2, _-1)
root(ROOT-0, Travel-2)
conj_and(Travel-2, Travel-2')
amod(days-5, off-peak-4)
prep_on(Travel-2, days-5)
amod(times-9, off-peak-8)
prep_at(Travel-2', times-9)

Saturday/NNP is/VBZ usually/RB the/DT least-traveled/JJ day/NN of/IN the/DT week/NN ;/: so/RB are/VBP major/JJ holidays/NNS ./.

(ROOT
  (S
    (S
      (NP (NNP Saturday))
      (VP (VBZ is)
        (ADVP (RB usually))
        (NP
          (NP (DT the) (JJ least-traveled) (NN day))
          (PP (IN of)
            (NP (DT the) (NN week))))))
    (: ;) (RB so)
    (S
      (VP (VBP are)
        (NP (JJ major) (NNS holidays))))
    (. .)))

nsubj(day-6, Saturday-1)
cop(day-6, is-2)
advmod(day-6, usually-3)
det(day-6, the-4)
amod(day-6, least-traveled-5)
root(ROOT-0, day-6)
det(week-9, the-8)
prep_of(day-6, week-9)
advmod(day-6, so-11)
cop(holidays-14, are-12)
amod(holidays-14, major-13)
parataxis(day-6, holidays-14)

Monday/NNP mornings/NNS and/CC Friday/NNP afternoons/NNS are/VBP peak/JJ travel/NN times/NNS for/IN business/NN travelers/NNS ./.

(ROOT
  (S
    (NP
      (NP (NNP Monday) (NNS mornings))
      (CC and)
      (NP (NNP Friday) (NNS afternoons)))
    (VP (VBP are)
      (NP
        (NP (JJ peak) (NN travel) (NNS times))
        (PP (IN for)
          (NP (NN business) (NNS travelers)))))
    (. .)))

nn(mornings-2, Monday-1)
nsubj(times-9, mornings-2)
nn(afternoons-5, Friday-4)
conj_and(mornings-2, afternoons-5)
nsubj(times-9, afternoons-5)
cop(times-9, are-6)
amod(times-9, peak-7)
nn(times-9, travel-8)
root(ROOT-0, times-9)
nn(travelers-12, business-11)
prep_for(times-9, travelers-12)

Flights/NNS leaving/VBG earlier/RB in/IN the/DT day/NN are/VBP less/RBR likely/JJ to/TO be/VB delayed/VBN ,/, because/IN of/IN the/DT cascading/VBG effect/NN that/IN disruptions/NNS have/VBP on/IN airline/NN schedules/NNS ./.

(ROOT
  (S
    (NP
      (NP (NNS Flights))
      (VP (VBG leaving)
        (ADVP (RB earlier)
          (PP (IN in)
            (NP (DT the) (NN day))))))
    (VP (VBP are)
      (ADJP
        (ADJP (RBR less) (JJ likely)
          (S
            (VP (TO to)
              (VP (VB be)
                (VP (VBN delayed) (, ,)
                  (PP (IN because) (IN of)
                    (NP (DT the) (VBG cascading) (NN effect))))))))
        (SBAR (IN that)
          (S
            (NP (NNS disruptions))
            (VP (VBP have)
              (VP
                (PP (IN on)
                  (NP (NN airline) (NNS schedules)))))))))
    (. .)))

nsubj(likely-9, Flights-1)
nsubjpass(delayed-12, Flights-1)
vmod(Flights-1, leaving-2)
advmod(leaving-2, earlier-3)
det(day-6, the-5)
prep_in(earlier-3, day-6)
cop(likely-9, are-7)
advmod(likely-9, less-8)
root(ROOT-0, likely-9)
aux(delayed-12, to-10)
auxpass(delayed-12, be-11)
xcomp(likely-9, delayed-12)
det(effect-18, the-16)
amod(effect-18, cascading-17)
prep_because_of(delayed-12, effect-18)
mark(on-22, that-19)
nsubj(on-22, disruptions-20)
aux(on-22, have-21)
ccomp(likely-9, on-22)
nn(schedules-24, airline-23)
pobj(on-22, schedules-24)

_/DT Use/NN smaller/JJR airports/NNS ./.

(ROOT
  (NP
    (NP (DT _) (NN Use))
    (NP (JJR smaller) (NNS airports))
    (. .)))

det(Use-2, _-1)
root(ROOT-0, Use-2)
amod(airports-4, smaller-3)
dep(Use-2, airports-4)

Instead/RB of/IN Los/NNP Angeles/NNP International/NNP ,/, for/IN example/NN ,/, consider/NN flying/VBG into/IN Burbank/NNP or/CC John/NNP Wayne/NNP Airport/NNP in/IN Orange/NNP County/NNP ,/, Calif/NNP .,/, or/CC use/NN Westchester/NNP County/NNP Airport/NNP instead/NN of/IN JFK/NNP in/IN New/NNP York/NNP ./.

(ROOT
  (FRAG
    (PP (RB Instead) (IN of)
      (NP
        (NP (NNP Los) (NNP Angeles) (NNP International))
        (, ,)
        (PP (IN for)
          (NP
            (NP (NN example))
            (, ,)
            (NP
              (NP (NN consider))
              (VP (VBG flying)
                (PP (IN into)
                  (NP (NNP Burbank)
                    (CC or)
                    (NNP John)))
                (X
                  (NP
                    (NP (NNP Wayne) (NNP Airport))
                    (PP (IN in)
                      (NP
                        (NP (NNP Orange) (NNP County))
                        (, ,)
                        (NP (NNP Calif) (, .,))
                        (CC or)
                        (NP (NN use) (NNP Westchester) (NNP County)))))
                  (NP (NNP Airport))
                  (NP
                    (NP (NN instead))
                    (PP (IN of)
                      (NP (NNP JFK)))))
                (PP (IN in)
                  (NP (NNP New) (NNP York)))))))))
    (. .)))

advmod(of-2, Instead-1)
root(ROOT-0, of-2)
nn(International-5, Los-3)
nn(International-5, Angeles-4)
pobj(of-2, International-5)
prep_for(International-5, example-8)
appos(example-8, consider-10)
vmod(consider-10, flying-11)
prep_into(flying-11, Burbank-13)
prep_into(flying-11, John-15)
conj_or(Burbank-13, John-15)
nn(Airport-17, Wayne-16)
dep(flying-11, Airport-17)
nn(County-20, Orange-19)
prep_in(Airport-17, County-20)
prep_in(Airport-17, Calif-22)
conj_or(County-20, Calif-22)
punct(Calif-22, .,-23)
nn(County-27, use-25)
nn(County-27, Westchester-26)
prep_in(Airport-17, County-27)
conj_or(County-20, County-27)
dep(flying-11, Airport-28)
prep_instead_of(flying-11, JFK-31)
nn(York-34, New-33)
prep_in(flying-11, York-34)

_/DT Avoid/JJ electronic/JJ tickets/NNS ./.

(ROOT
  (NP
    (NP (DT _))
    (NP (JJ Avoid) (JJ electronic) (NNS tickets))
    (. .)))

root(ROOT-0, _-1)
amod(tickets-4, Avoid-2)
amod(tickets-4, electronic-3)
dep(_-1, tickets-4)

Though/JJ they/PRP are/VBP convenient/JJ and/CC more/JJR secure/NN than/IN an/DT easily/RB lost/VBN paper/NN ticket/NN ,/, they/PRP are/VBP not/RB transferable/JJ between/IN most/JJS airlines/NNS if/IN you/PRP need/VBP to/TO switch/VB carriers/NNS because/IN of/IN delays/NNS ./.

(ROOT
  (S
    (S
      (ADJP
        (ADJP (JJ Though)
          (SBAR
            (S
              (NP (PRP they))
              (VP (VBP are)
                (ADJP (JJ convenient))))))
        (CC and)
        (ADJP (JJR more) (NN secure)
          (PP (IN than)
            (NP (DT an)
              (ADJP (RB easily) (VBN lost))
              (NN paper) (NN ticket))))))
    (, ,)
    (NP (PRP they))
    (VP (VBP are) (RB not)
      (ADVP (JJ transferable))
      (PP (IN between)
        (NP (JJS most) (NNS airlines)))
      (SBAR (IN if)
        (S
          (NP (PRP you))
          (VP (VBP need)
            (S
              (VP (TO to)
                (VP (VB switch)
                  (NP (NNS carriers))
                  (PP (IN because)
                    (PP (IN of)
                      (NP (NNS delays)))))))))))
    (. .)))

ccomp(are-16, Though-1)
nsubj(convenient-4, they-2)
cop(convenient-4, are-3)
ccomp(Though-1, convenient-4)
dep(secure-7, more-6)
conj_and(Though-1, secure-7)
ccomp(are-16, secure-7)
det(ticket-13, an-9)
advmod(lost-11, easily-10)
amod(ticket-13, lost-11)
nn(ticket-13, paper-12)
prep_than(secure-7, ticket-13)
nsubj(are-16, they-15)
root(ROOT-0, are-16)
neg(are-16, not-17)
advmod(are-16, transferable-18)
amod(airlines-21, most-20)
prep_between(are-16, airlines-21)
mark(need-24, if-22)
nsubj(need-24, you-23)
nsubj(switch-26, you-23)
advcl(are-16, need-24)
aux(switch-26, to-25)
xcomp(need-24, switch-26)
dobj(switch-26, carriers-27)
prepc_because_of(switch-26, of-29)
pobj(switch-26, delays-30)

_/DT Watch/NN for/IN labor/NN disruptions/NNS ./.

(ROOT
  (NP
    (NP (DT _) (NN Watch))
    (PP (IN for)
      (NP (NN labor) (NNS disruptions)))
    (. .)))

det(Watch-2, _-1)
root(ROOT-0, Watch-2)
nn(disruptions-5, labor-4)
prep_for(Watch-2, disruptions-5)

Check/NNP newspapers/NNS and/CC Web/NNP sites/NNS like/IN www.thenewfoundlandgroup.com/NN to/TO identify/VB airlines/NNS experiencing/VBG labor/NN strife/NN ,/, which/WDT often/RB increases/NNS cancellations/NNS and/CC delays/NNS ./.

(ROOT
  (NP
    (NP
      (NP (NNP Check) (NNS newspapers))
      (CC and)
      (NP
        (NP (NNP Web) (NNS sites))
        (PP (IN like)
          (NP (NN www.thenewfoundlandgroup.com)))))
    (SBAR
      (S
        (VP (TO to)
          (VP (VB identify)
            (NP (NNS airlines))
            (S
              (VP (VBG experiencing)
                (S
                  (NP
                    (NP (NN labor) (NN strife))
                    (, ,)
                    (SBAR
                      (WHNP (WDT which))
                      (S
                        (VP
                          (ADVP (RB often))))))
                  (NP
                    (NP (NNS increases) (NNS cancellations))
                    (CC and)
                    (NP (NNS delays))))))))))
    (. .)))

nn(newspapers-2, Check-1)
root(ROOT-0, newspapers-2)
nn(sites-5, Web-4)
conj_and(newspapers-2, sites-5)
prep_like(sites-5, www.thenewfoundlandgroup.com-7)
aux(identify-9, to-8)
vmod(newspapers-2, identify-9)
dobj(identify-9, airlines-10)
xcomp(identify-9, experiencing-11)
nn(strife-13, labor-12)
nsubj(often-16, strife-13)
nsubj(cancellations-18, strife-13)
rcmod(strife-13, often-16)
nn(cancellations-18, increases-17)
xcomp(experiencing-11, cancellations-18)
xcomp(experiencing-11, delays-20)
conj_and(cancellations-18, delays-20)

_/DT Leave/NNP a/DT number/NN ./.

(ROOT
  (S
    (NP (DT _))
    (VP (NNP Leave)
      (NP (DT a) (NN number)))
    (. .)))

nsubj(number-4, _-1)
dep(number-4, Leave-2)
det(number-4, a-3)
root(ROOT-0, number-4)

Make/NNP sure/JJ the/DT airline/NN you/PRP book/NN with/IN has/VBZ a/DT phone/NN number/NN at/IN which/WDT you/PRP can/MD be/VB notified/VBN of/IN delays/NNS or/CC cancellations/NNS ./.

(ROOT
  (NP
    (NP
      (ADJP (NNP Make) (JJ sure))
      (DT the) (NN airline))
    (NP
      (NP (PRP you))
      (SBAR
        (WHNP
          (WHNP (NN book))
          (PP (IN with)))
        (S
          (VP (VBZ has)
            (NP
              (NP (DT a) (NN phone) (NN number))
              (SBAR
                (WHPP (IN at)
                  (WHNP (WDT which)))
                (S
                  (NP (PRP you))
                  (VP (MD can)
                    (VP (VB be)
                      (VP (VBN notified)
                        (PP (IN of)
                          (NP (NNS delays)
                            (CC or)
                            (NNS cancellations)))))))))))))
    (. .)))

amod(sure-2, Make-1)
amod(airline-4, sure-2)
det(airline-4, the-3)
root(ROOT-0, airline-4)
dep(airline-4, you-5)
nsubj(has-8, book-6)
prep(book-6, with-7)
rcmod(you-5, has-8)
det(number-11, a-9)
nn(number-11, phone-10)
dobj(has-8, number-11)
prep_at(notified-17, number-11)
nsubjpass(notified-17, you-14)
aux(notified-17, can-15)
auxpass(notified-17, be-16)
rcmod(number-11, notified-17)
prep_of(notified-17, delays-19)
prep_of(notified-17, cancellations-21)
conj_or(delays-19, cancellations-21)

_/PRP Use/VBP a/DT travel/NN agent/NN ./.

(ROOT
  (S
    (NP (PRP _))
    (VP (VBP Use)
      (NP (DT a) (NN travel) (NN agent)))
    (. .)))

nsubj(Use-2, _-1)
root(ROOT-0, Use-2)
det(agent-5, a-3)
nn(agent-5, travel-4)
dobj(Use-2, agent-5)

A/DT good/JJ one/NN can/MD be/VB a/DT great/JJ ally/NN in/IN the/DT event/NN of/IN a/DT problem/NN _/NN and/CC may/MD save/VB you/PRP time/NN and/CC money/NN ./.

(ROOT
  (S
    (NP (DT A) (JJ good) (NN one))
    (VP
      (VP (MD can)
        (VP (VB be)
          (NP
            (NP (DT a) (JJ great) (NN ally))
            (PP (IN in)
              (NP
                (NP (DT the) (NN event))
                (PP (IN of)
                  (NP (DT a) (NN problem) (NN _))))))))
      (CC and)
      (VP (MD may)
        (VP (VB save)
          (NP (PRP you))
          (NP (NN time)
            (CC and)
            (NN money)))))
    (. .)))

det(one-3, A-1)
amod(one-3, good-2)
nsubj(ally-8, one-3)
nsubj(save-18, one-3)
aux(ally-8, can-4)
cop(ally-8, be-5)
det(ally-8, a-6)
amod(ally-8, great-7)
root(ROOT-0, ally-8)
det(event-11, the-10)
prep_in(ally-8, event-11)
det(_-15, a-13)
nn(_-15, problem-14)
prep_of(event-11, _-15)
aux(save-18, may-17)
conj_and(ally-8, save-18)
iobj(save-18, you-19)
dobj(save-18, time-20)
dobj(save-18, money-22)
conj_and(time-20, money-22)

Day/NNP of/IN Departure/NN :/:

(ROOT
  (NP
    (NP (NNP Day))
    (PP (IN of)
      (NP (NN Departure)))
    (: :)))

root(ROOT-0, Day-1)
prep_of(Day-1, Departure-3)

_/DT Be/NNP informed/VBD ./.

(ROOT
  (S
    (NP (DT _) (NNP Be))
    (VP (VBD informed))
    (. .)))

det(Be-2, _-1)
nsubj(informed-3, Be-2)
root(ROOT-0, informed-3)

Check/NNP your/PRP$ flight/NN 's/POS status/NN before/IN heading/VBG to/TO the/DT airport/NN ./.

(ROOT
  (FRAG
    (NP
      (NP (NNP Check))
      (NP
        (NP (PRP$ your) (NN flight) (POS 's))
        (NN status)))
    (PP (IN before)
      (S
        (VP (VBG heading)
          (PP (TO to)
            (NP (DT the) (NN airport)))))
      (. .))))

root(ROOT-0, Check-1)
poss(flight-3, your-2)
poss(status-5, flight-3)
dep(Check-1, status-5)
prepc_before(Check-1, heading-7)
det(airport-10, the-9)
prep_to(heading-7, airport-10)

Automated/JJ telephone/NN services/NNS or/CC airline/NN Web/NNP sites/VBZ often/RB provide/VB more/RBR up-to-date/JJ information/NN than/IN do/VBP ticket/RB agents/NNS ./.

(ROOT
  (S
    (NP
      (NP (JJ Automated) (NN telephone) (NNS services))
      (CC or)
      (NP (NN airline) (NNP Web)))
    (VP (VBZ sites) (RB often)
      (VP (VB provide)
        (NP (RBR more) (JJ up-to-date) (NN information))
        (SBAR (IN than)
          (S
            (VP (VBP do)
              (ADVP (RB ticket))
              (NP (NNS agents)))))))
    (. .)))

amod(services-3, Automated-1)
nn(services-3, telephone-2)
nsubj(sites-7, services-3)
nn(Web-6, airline-5)
conj_or(services-3, Web-6)
nsubj(sites-7, Web-6)
root(ROOT-0, sites-7)
advmod(sites-7, often-8)
dep(sites-7, provide-9)
advmod(information-12, more-10)
amod(information-12, up-to-date-11)
dobj(provide-9, information-12)
mark(do-14, than-13)
advcl(provide-9, do-14)
advmod(do-14, ticket-15)
dobj(do-14, agents-16)

The/DT Federal/NNP Aviation/NNP Administration/NNP 's/POS Web/NNP site/NN ,/, www.fly.faa.gov/NNP ,/, has/VBZ real-time/JJ information/NN on/IN operations/NNS at/IN the/DT biggest/JJS airports/NNS ./.

(ROOT
  (S
    (NP
      (NP
        (NP (DT The) (NNP Federal) (NNP Aviation) (NNP Administration) (POS 's))
        (NNP Web) (NN site))
      (, ,)
      (NP (NNP www.fly.faa.gov))
      (, ,))
    (VP (VBZ has)
      (NP
        (NP (JJ real-time) (NN information))
        (PP (IN on)
          (NP
            (NP (NNS operations))
            (PP (IN at)
              (NP (DT the) (JJS biggest) (NNS airports)))))))
    (. .)))

det(Administration-4, The-1)
nn(Administration-4, Federal-2)
nn(Administration-4, Aviation-3)
poss(site-7, Administration-4)
nn(site-7, Web-6)
nsubj(has-11, site-7)
appos(site-7, www.fly.faa.gov-9)
root(ROOT-0, has-11)
amod(information-13, real-time-12)
dobj(has-11, information-13)
prep_on(information-13, operations-15)
det(airports-19, the-17)
amod(airports-19, biggest-18)
prep_at(operations-15, airports-19)

_/DT Pack/NNP defensively/RB ./.

(ROOT
  (FRAG
    (NP (DT _) (NNP Pack))
    (ADVP (RB defensively))
    (. .)))

det(Pack-2, _-1)
root(ROOT-0, Pack-2)
dep(Pack-2, defensively-3)

Take/NNP along/IN a/DT change/NN of/IN clothes/NNS and/CC a/DT toothbrush/NN in/IN your/PRP$ carry-on/NN bag/NN ./.

(ROOT
  (NP
    (NP (NNP Take))
    (PP (IN along)
      (NP
        (NP (DT a) (NN change))
        (PP (IN of)
          (NP
            (NP (NNS clothes))
            (CC and)
            (NP (DT a) (NN toothbrush))))))
    (PP (IN in)
      (NP (PRP$ your) (NN carry-on) (NN bag)))
    (. .)))

root(ROOT-0, Take-1)
det(change-4, a-3)
prep_along(Take-1, change-4)
prep_of(change-4, clothes-6)
det(toothbrush-9, a-8)
prep_of(change-4, toothbrush-9)
conj_and(clothes-6, toothbrush-9)
poss(bag-13, your-11)
nn(bag-13, carry-on-12)
prep_in(Take-1, bag-13)

If/IN traveling/VBG with/IN an/DT infant/NN ,/, take/VB 24/CD hours/NNS '/POS worth/NN of/IN diapers/NNS and/CC extra/JJ formula/NN ./.

(ROOT
  (S
    (SBAR (IN If)
      (S
        (VP (VBG traveling)
          (PP (IN with)
            (NP (DT an) (NN infant))))))
    (, ,)
    (VP (VB take)
      (NP
        (NP
          (NP (CD 24) (NNS hours) (POS '))
          (NN worth))
        (PP (IN of)
          (NP
            (NP (NNS diapers))
            (CC and)
            (NP (JJ extra) (NN formula))))))
    (. .)))

mark(traveling-2, If-1)
advcl(take-7, traveling-2)
det(infant-5, an-4)
prep_with(traveling-2, infant-5)
root(ROOT-0, take-7)
num(hours-9, 24-8)
poss(worth-11, hours-9)
dobj(take-7, worth-11)
prep_of(worth-11, diapers-13)
amod(formula-16, extra-15)
prep_of(worth-11, formula-16)
conj_and(diapers-13, formula-16)

When/WRB possible/JJ ,/, avoid/JJ checking/NN luggage/NN ,/, in/IN case/NN you/PRP need/VBP to/TO switch/VB flights/NNS or/CC carriers/NNS ./.

(ROOT
  (S
    (SBAR
      (WHADVP (WRB When))
      (S
        (ADJP (JJ possible))))
    (, ,)
    (NP (JJ avoid) (NN checking) (NN luggage))
    (, ,)
    (PP (IN in)
      (NP (NN case)))
    (NP (PRP you))
    (VP (VBP need)
      (S
        (VP (TO to)
          (VP (VB switch)
            (NP (NNS flights)
              (CC or)
              (NNS carriers))))))
    (. .)))

advmod(possible-2, When-1)
advcl(need-11, possible-2)
amod(luggage-6, avoid-4)
nn(luggage-6, checking-5)
nsubj(need-11, luggage-6)
nsubj(switch-13, luggage-6)
prep_in(need-11, case-9)
nsubj(need-11, you-10)
nsubj(switch-13, you-10)
root(ROOT-0, need-11)
aux(switch-13, to-12)
xcomp(need-11, switch-13)
dobj(switch-13, flights-14)
dobj(switch-13, carriers-16)
conj_or(flights-14, carriers-16)

Ship/NNP your/PRP$ gifts/NNS ahead/RB ./.

(ROOT
  (NP
    (NP (NNP Ship))
    (NP
      (NP (PRP$ your) (NNS gifts))
      (ADVP (RB ahead)))
    (. .)))

root(ROOT-0, Ship-1)
poss(gifts-3, your-2)
dep(Ship-1, gifts-3)
advmod(gifts-3, ahead-4)

_/DT Educate/NNP yourself/PRP ./.

(ROOT
  (NP
    (NP (DT _) (NNP Educate))
    (NP (PRP yourself))
    (. .)))

det(Educate-2, _-1)
root(ROOT-0, Educate-2)
npadvmod(Educate-2, yourself-3)

Find/NNP out/IN what/WP your/PRP$ airline/NN promises/VBZ to/TO do/VB for/IN passengers/NNS in/IN the/DT event/NN of/IN a/DT delay/NN ./.

(ROOT
  (NP
    (NP (NNP Find))
    (PP (IN out)
      (SBAR
        (WHNP (WP what))
        (S
          (NP (PRP$ your) (NN airline))
          (VP (VBZ promises)
            (S
              (VP (TO to)
                (VP (VB do)
                  (PP (IN for)
                    (NP
                      (NP (NNS passengers))
                      (PP (IN in)
                        (NP
                          (NP (DT the) (NN event))
                          (PP (IN of)
                            (NP (DT a) (NN delay))))))))))))))
    (. .)))

root(ROOT-0, Find-1)
dobj(promises-6, what-3)
nsubj(do-8, what-3)
poss(airline-5, your-4)
nsubj(promises-6, airline-5)
prepc_out(Find-1, promises-6)
aux(do-8, to-7)
xcomp(promises-6, do-8)
prep_for(do-8, passengers-10)
det(event-13, the-12)
prep_in(passengers-10, event-13)
det(delay-16, a-15)
prep_of(event-13, delay-16)

Print/NNP out/IN a/DT copy/NN of/IN the/DT policy/NN from/IN the/DT airline/NN 's/POS Web/NNP site/NN ,/, and/CC carry/VB it/PRP with/IN you/PRP _/VBP in/IN case/NN the/DT airline/NN representatives/VBZ need/VBP a/DT reminder/NN ./.

(ROOT
  (S
    (NP
      (NP (NNP Print))
      (UCP
        (PP (IN out)
          (NP
            (NP (DT a) (NN copy))
            (PP (IN of)
              (NP
                (NP (DT the) (NN policy))
                (PP (IN from)
                  (NP
                    (NP (DT the) (NN airline) (POS 's))
                    (NNP Web) (NN site)))))))
        (, ,)
        (CC and)
        (S
          (VP (VB carry)
            (NP (PRP it))
            (SBAR (IN with)
              (S
                (NP (PRP you))
                (VP (VBP _)
                  (SBAR (IN in) (NN case)
                    (S
                      (NP (DT the) (NN airline))
                      (VP (VBZ representatives)))))))))))
    (VP (VBP need)
      (NP (DT a) (NN reminder)))
    (. .)))

nsubj(need-26, Print-1)
prep(Print-1, out-2)
det(copy-4, a-3)
pobj(out-2, copy-4)
det(policy-7, the-6)
prep_of(copy-4, policy-7)
det(airline-10, the-9)
poss(site-13, airline-10)
nn(site-13, Web-12)
prep_from(policy-7, site-13)
prep(Print-1, carry-16)
conj_and(out-2, carry-16)
dobj(carry-16, it-17)
mark(_-20, with-18)
nsubj(_-20, you-19)
advcl(carry-16, _-20)
mark(representatives-25, in-21)
dep(representatives-25, case-22)
det(airline-24, the-23)
nsubj(representatives-25, airline-24)
advcl(_-20, representatives-25)
root(ROOT-0, need-26)
det(reminder-28, a-27)
dobj(need-26, reminder-28)

If/IN a/DT Flight/JJ Is/JJ Delayed/NN :/:

(ROOT
  (FRAG
    (PP (IN If)
      (NP (DT a) (JJ Flight) (JJ Is)))
    (NP (NN Delayed))
    (: :)))

det(Is-4, a-2)
amod(Is-4, Flight-3)
prep_if(Delayed-5, Is-4)
root(ROOT-0, Delayed-5)

_/DT Keep/NNP your/PRP$ cool/NN ./.

(ROOT
  (S
    (NP (DT _))
    (VP (NNP Keep)
      (NP (PRP$ your) (NN cool)))
    (. .)))

nsubj(cool-4, _-1)
dep(cool-4, Keep-2)
poss(cool-4, your-3)
root(ROOT-0, cool-4)

Becoming/VBG angry/RB at/IN airline/NN personnel/NN is/VBZ counterproductive/JJ ./.

(ROOT
  (S
    (S
      (VP (VBG Becoming)
        (ADVP (RB angry))
        (PP (IN at)
          (NP (NN airline) (NN personnel)))))
    (VP (VBZ is)
      (ADJP (JJ counterproductive)))
    (. .)))

csubj(counterproductive-7, Becoming-1)
advmod(Becoming-1, angry-2)
nn(personnel-5, airline-4)
prep_at(Becoming-1, personnel-5)
cop(counterproductive-7, is-6)
root(ROOT-0, counterproductive-7)

Sympathy/RB for/IN their/PRP$ plight/NN will/MD sometimes/RB produce/VB results/NNS ./.

(ROOT
  (FRAG
    (ADVP (RB Sympathy))
    (SBAR (IN for)
      (S
        (NP (PRP$ their) (NN plight))
        (VP (MD will)
          (ADVP (RB sometimes))
          (VP (VB produce)
            (NP (NNS results))))))
    (. .)))

root(ROOT-0, Sympathy-1)
mark(produce-7, for-2)
poss(plight-4, their-3)
nsubj(produce-7, plight-4)
aux(produce-7, will-5)
advmod(produce-7, sometimes-6)
dep(Sympathy-1, produce-7)
dobj(produce-7, results-8)

_/DT Don't/NNP stand/NN in/IN line/NN ./.

(ROOT
  (NP
    (NP (DT _) (NNP Don't) (NN stand))
    (PP (IN in)
      (NP (NN line)))
    (. .)))

det(stand-3, _-1)
nn(stand-3, Don't-2)
root(ROOT-0, stand-3)
prep_in(stand-3, line-5)

To/TO get/VB on/IN another/DT flight/NN ,/, it/PRP is/VBZ often/RB more/RBR effective/JJ to/TO call/VB the/DT airline/NN from/IN the/DT airport/NN than/IN to/TO wait/VB at/IN the/DT ticket/NN counter/NN ./.

(ROOT
  (S
    (S
      (VP (TO To)
        (VP (VB get)
          (PP (IN on)
            (NP (DT another) (NN flight))))))
    (, ,)
    (NP (PRP it))
    (VP (VBZ is)
      (ADVP (RB often))
      (ADJP
        (ADJP (RBR more) (JJ effective)
          (S
            (VP (TO to)
              (VP (VB call)
                (NP (DT the) (NN airline))
                (PP (IN from)
                  (NP (DT the) (NN airport)))))))
        (SBAR (IN than)
          (S
            (VP (TO to)
              (VP (VB wait)
                (PP (IN at)
                  (NP (DT the) (NN ticket) (NN counter)))))))))
    (. .)))

aux(get-2, To-1)
advcl(effective-11, get-2)
det(flight-5, another-4)
prep_on(get-2, flight-5)
nsubj(effective-11, it-7)
nsubj(call-13, it-7)
cop(effective-11, is-8)
advmod(effective-11, often-9)
advmod(effective-11, more-10)
root(ROOT-0, effective-11)
aux(call-13, to-12)
xcomp(effective-11, call-13)
det(airline-15, the-14)
dobj(call-13, airline-15)
det(airport-18, the-17)
prep_from(call-13, airport-18)
mark(wait-21, than-19)
aux(wait-21, to-20)
ccomp(effective-11, wait-21)
det(counter-25, the-23)
nn(counter-25, ticket-24)
prep_at(wait-21, counter-25)

Carry/NNP a/DT cell/NN phone/NN ;/: if/IN delays/NNS are/VBP widespread/RB ,/, public/JJ telephones/NN may/MD be/VB in/IN demand/NN ./.

(ROOT
  (NP
    (NP
      (NP (NNP Carry))
      (NP (DT a) (NN cell) (NN phone)))
    (: ;)
    (S
      (SBAR (IN if)
        (S
          (NP (NNS delays))
          (VP (VBP are)
            (ADVP (RB widespread)))))
      (, ,)
      (NP (JJ public) (NN telephones))
      (VP (MD may)
        (VP (VB be)
          (PP (IN in)
            (NP (NN demand))))))
    (. .)))

root(ROOT-0, Carry-1)
det(phone-4, a-2)
nn(phone-4, cell-3)
dep(Carry-1, phone-4)
mark(are-8, if-6)
nsubj(are-8, delays-7)
advcl(be-14, are-8)
advmod(are-8, widespread-9)
amod(telephones-12, public-11)
nsubj(be-14, telephones-12)
aux(be-14, may-13)
dep(Carry-1, be-14)
prep_in(be-14, demand-16)

_/PRP Check/NNP the/DT competition/NN ./.

(ROOT
  (S
    (NP (PRP _))
    (VP (NNP Check)
      (NP (DT the) (NN competition)))
    (. .)))

nsubj(competition-4, _-1)
dep(competition-4, Check-2)
det(competition-4, the-3)
root(ROOT-0, competition-4)

If/IN another/DT airline/NN has/VBZ seats/NNS to/TO your/PRP$ destination/NN ,/, ask/VB your/PRP$ airline/NN to/TO endorse/VB your/PRP$ ticket/NN to/TO the/DT other/JJ line/NN ./.

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (DT another) (NN airline))
        (VP (VBZ has)
          (NP
            (NP (NNS seats))
            (PP (TO to)
              (NP (PRP$ your) (NN destination)))))))
    (, ,)
    (VP (VB ask)
      (NP (PRP$ your) (NN airline)
        (S
          (VP (TO to)
            (VP (VB endorse)
              (NP (PRP$ your) (NN ticket))
              (PP (TO to)
                (NP (DT the) (JJ other) (NN line))))))))
    (. .)))

mark(has-4, If-1)
det(airline-3, another-2)
nsubj(has-4, airline-3)
advcl(ask-10, has-4)
dobj(has-4, seats-5)
poss(destination-8, your-7)
prep_to(seats-5, destination-8)
root(ROOT-0, ask-10)
poss(airline-12, your-11)
dobj(ask-10, airline-12)
aux(endorse-14, to-13)
vmod(airline-12, endorse-14)
poss(ticket-16, your-15)
dobj(endorse-14, ticket-16)
det(line-20, the-18)
amod(line-20, other-19)
prep_to(endorse-14, line-20)

_/DT Get/NNP what/WP you/PRP paid/VBN for/IN ./.

(ROOT
  (S
    (NP (DT _) (NNP Get))
    (SBAR
      (WHNP (WP what))
      (S
        (NP (PRP you))
        (VP (VBN paid)
          (PP (IN for)))))
    (. .)))

det(Get-2, _-1)
dep(paid-5, Get-2)
prep_for(paid-5, what-3)
nsubj(paid-5, you-4)
root(ROOT-0, paid-5)

If/IN you/PRP paid/VBD full/JJ fare/NN or/CC are/VBP a/DT high-mileage/JJ frequent/JJ flier/NN ,/, let/VB the/DT airline/NN know/VBP ./.

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP (PRP you))
        (VP
          (VP (VBD paid)
            (NP (JJ full) (NN fare)))
          (CC or)
          (VP (VBP are)
            (NP (DT a) (JJ high-mileage) (JJ frequent) (NN flier))))))
    (, ,)
    (VP (VB let)
      (SBAR
        (S
          (NP (DT the) (NN airline))
          (VP (VBP know)))))
    (. .)))

mark(paid-3, If-1)
nsubj(paid-3, you-2)
advcl(let-13, paid-3)
amod(fare-5, full-4)
dobj(paid-3, fare-5)
cop(flier-11, are-7)
det(flier-11, a-8)
amod(flier-11, high-mileage-9)
amod(flier-11, frequent-10)
conj_or(paid-3, flier-11)
advcl(let-13, flier-11)
root(ROOT-0, let-13)
det(airline-15, the-14)
nsubj(know-16, airline-15)
ccomp(let-13, know-16)

Your/PRP$ odds/NNS of/IN getting/VBG a/DT seat/NN on/IN the/DT next/JJ flight/NN out/IN will/MD increase/VB ,/, or/CC the/DT airline/NN might/MD pay/VB for/IN your/PRP$ hotel/NN ,/, if/IN you/PRP are/VBP delayed/VBN overnight/JJ ./.

(ROOT
  (S
    (S
      (NP
        (NP (PRP$ Your) (NNS odds))
        (PP (IN of)
          (S
            (VP (VBG getting)
              (NP
                (NP (DT a) (NN seat))
                (PP (IN on)
                  (NP (DT the) (JJ next) (NN flight))))
              (ADVP (IN out))))))
      (VP (MD will)
        (VP (VB increase))))
    (, ,)
    (CC or)
    (S
      (NP (DT the) (NN airline))
      (VP (MD might)
        (VP (VB pay)
          (PP (IN for)
            (NP (PRP$ your) (NN hotel)))
          (, ,)
          (SBAR (IN if)
            (S
              (NP (PRP you))
              (VP (VBP are)
                (VP (VBN delayed)
                  (NP (JJ overnight)))))))))
    (. .)))

poss(odds-2, Your-1)
nsubj(increase-13, odds-2)
prepc_of(odds-2, getting-4)
det(seat-6, a-5)
dobj(getting-4, seat-6)
det(flight-10, the-8)
amod(flight-10, next-9)
prep_on(seat-6, flight-10)
advmod(getting-4, out-11)
aux(increase-13, will-12)
root(ROOT-0, increase-13)
det(airline-17, the-16)
nsubj(pay-19, airline-17)
aux(pay-19, might-18)
conj_or(increase-13, pay-19)
poss(hotel-22, your-21)
prep_for(pay-19, hotel-22)
mark(delayed-27, if-24)
nsubjpass(delayed-27, you-25)
auxpass(delayed-27, are-26)
advcl(pay-19, delayed-27)
dobj(delayed-27, overnight-28)

_/DT Consider/NNP driving/NN ./.

(ROOT
  (S
    (NP (DT _))
    (VP (NNP Consider)
      (NP (NN driving)))
    (. .)))

nsubj(driving-3, _-1)
dep(driving-3, Consider-2)
root(ROOT-0, driving-3)

If/IN the/DT last/JJ leg/NN of/IN your/PRP$ flight/NN is/VBZ a/DT 200-mile/JJ hop/NN ,/, renting/VBG a/DT car/NN might/MD be/VB a/DT better/JJR choice/NN than/IN waiting/VBG out/RP a/DT delay/NN ./.

(ROOT
  (S
    (SBAR (IN If)
      (S
        (NP
          (NP (DT the) (JJ last) (NN leg))
          (PP (IN of)
            (NP (PRP$ your) (NN flight))))
        (VP (VBZ is)
          (NP (DT a) (JJ 200-mile) (NN hop)))))
    (, ,)
    (S
      (VP (VBG renting)
        (NP (DT a) (NN car))))
    (VP (MD might)
      (VP (VB be)
        (NP
          (NP (DT a) (JJR better) (NN choice))
          (PP (IN than)
            (S
              (VP (VBG waiting)
                (PRT (RP out))
                (NP (DT a) (NN delay))))))))
    (. .)))

mark(hop-11, If-1)
det(leg-4, the-2)
amod(leg-4, last-3)
nsubj(hop-11, leg-4)
poss(flight-7, your-6)
prep_of(leg-4, flight-7)
cop(hop-11, is-8)
det(hop-11, a-9)
amod(hop-11, 200-mile-10)
advcl(choice-20, hop-11)
csubj(choice-20, renting-13)
det(car-15, a-14)
dobj(renting-13, car-15)
aux(choice-20, might-16)
cop(choice-20, be-17)
det(choice-20, a-18)
amod(choice-20, better-19)
root(ROOT-0, choice-20)
prepc_than(choice-20, waiting-22)
prt(waiting-22, out-23)
det(delay-25, a-24)
dobj(waiting-22, delay-25)

Getting/JJ Even/NNS :/:

(ROOT
  (NP (JJ Getting) (NNS Even) (: :)))

amod(Even-2, Getting-1)
root(ROOT-0, Even-2)

_/PRP Write/VBP a/DT letter/NN ./.

(ROOT
  (S
    (NP (PRP _))
    (VP (VBP Write)
      (NP (DT a) (NN letter)))
    (. .)))

nsubj(Write-2, _-1)
root(ROOT-0, Write-2)
det(letter-4, a-3)
dobj(Write-2, letter-4)

The/DT airlines/NNS have/VBP pledged/VBN to/TO respond/VB to/TO consumer/NN complaints/NNS within/IN 60/CD days/NNS ./.

(ROOT
  (S
    (NP (DT The) (NNS airlines))
    (VP (VBP have)
      (VP (VBN pledged)
        (S
          (VP (TO to)
            (VP (VB respond)
              (PP (TO to)
                (NP (NN consumer) (NNS complaints)))
              (PP (IN within)
                (NP (CD 60) (NNS days))))))))
    (. .)))

det(airlines-2, The-1)
nsubj(pledged-4, airlines-2)
nsubj(respond-6, airlines-2)
aux(pledged-4, have-3)
root(ROOT-0, pledged-4)
aux(respond-6, to-5)
xcomp(pledged-4, respond-6)
nn(complaints-9, consumer-8)
prep_to(respond-6, complaints-9)
num(days-12, 60-11)
prep_within(respond-6, days-12)

They/PRP almost/RB always/VBZ offer/VBP a/DT refund/NN ,/, reimbursement/NN of/IN expenses/NNS ,/, a/DT discount/NN on/IN your/PRP$ next/JJ ticket/NN _/, or/CC all/DT three/CD ./.

(ROOT
  (SINV
    (S
      (NP (PRP They))
      (ADVP (RB almost))
      (VP (VBZ always)))
    (VP (VBP offer))
    (NP
      (NP (DT a) (NN refund))
      (, ,)
      (NP
        (NP (NN reimbursement))
        (PP (IN of)
          (NP
            (NP
              (NP (NNS expenses))
              (, ,)
              (NP
                (NP (DT a) (NN discount))
                (PP (IN on)
                  (NP (PRP$ your) (JJ next) (NN ticket)))))
            (, _)
            (CC or)
            (NP
              (QP (DT all) (CD three)))))))
    (. .)))

nsubj(always-3, They-1)
advmod(always-3, almost-2)
dep(offer-4, always-3)
root(ROOT-0, offer-4)
det(refund-6, a-5)
nsubj(offer-4, refund-6)
appos(refund-6, reimbursement-8)
prep_of(reimbursement-8, expenses-10)
det(discount-13, a-12)
appos(expenses-10, discount-13)
poss(ticket-17, your-15)
amod(ticket-17, next-16)
prep_on(discount-13, ticket-17)
punct(expenses-10, _-18)
quantmod(three-21, all-20)
prep_of(reimbursement-8, three-21)
conj_or(expenses-10, three-21)

Be/RB sure/JJ to/TO save/VB the/DT relevant/JJ paperwork/NN ./.

(ROOT
  (FRAG
    (ADJP (RB Be) (JJ sure))
    (S
      (VP (TO to)
        (VP (VB save)
          (NP (DT the) (JJ relevant) (NN paperwork)))))
    (. .)))

advmod(sure-2, Be-1)
root(ROOT-0, sure-2)
aux(save-4, to-3)
dep(sure-2, save-4)
det(paperwork-7, the-5)
amod(paperwork-7, relevant-6)
dobj(save-4, paperwork-7)

_/DT Make/NNP it/PRP a/DT federal/JJ case/NN ./.

(ROOT
  (S
    (NP (DT _))
    (VP (NNP Make)
      (S
        (NP (PRP it))
        (NP (DT a) (JJ federal) (NN case))))
    (. .)))

nsubj(Make-2, _-1)
root(ROOT-0, Make-2)
nsubj(case-6, it-3)
det(case-6, a-4)
amod(case-6, federal-5)
xcomp(Make-2, case-6)

Send/NNP a/DT copy/NN of/IN your/PRP$ letter/NN to/TO Washington/NNP ./.

(ROOT
  (NP
    (NP (NNP Send))
    (NP
      (NP (DT a) (NN copy))
      (PP (IN of)
        (NP
          (NP (PRP$ your) (NN letter))
          (PP (TO to)
            (NP (NNP Washington))))))
    (. .)))

root(ROOT-0, Send-1)
det(copy-3, a-2)
dep(Send-1, copy-3)
poss(letter-6, your-5)
prep_of(copy-3, letter-6)
prep_to(letter-6, Washington-8)

Complaints/NNS are/VBP charged/VBN against/IN each/DT airline/NN in/IN the/DT Transportation/NNP Department/NNP 's/POS monthly/JJ Air/NN Travel/NNP Consumer/NNP Report/NNP and/CC serve/NN as/IN a/DT basis/NN for/IN rule/NN making/VBG and/CC enforcement/NN action/NN ./.

(ROOT
  (S
    (NP (NNS Complaints))
    (VP (VBP are)
      (VP (VBN charged)
        (PP (IN against)
          (NP
            (NP (DT each) (NN airline))
            (PP (IN in)
              (NP
                (NP
                  (NP
                    (NP (DT the) (NNP Transportation) (NNP Department) (POS 's))
                    (JJ monthly) (NN Air))
                  (NP (NNP Travel) (NNP Consumer) (NNP Report)))
                (CC and)
                (NP
                  (NP (NN serve))
                  (PP (IN as)
                    (NP (DT a) (NN basis))))))))
        (PP (IN for)
          (NP
            (NP (NN rule) (VBG making))
            (CC and)
            (NP (NN enforcement) (NN action))))))
    (. .)))

nsubjpass(charged-3, Complaints-1)
auxpass(charged-3, are-2)
root(ROOT-0, charged-3)
det(airline-6, each-5)
prep_against(charged-3, airline-6)
det(Department-10, the-8)
nn(Department-10, Transportation-9)
poss(Air-13, Department-10)
amod(Air-13, monthly-12)
prep_in(airline-6, Air-13)
nn(Report-16, Travel-14)
nn(Report-16, Consumer-15)
dep(Air-13, Report-16)
prep_in(airline-6, serve-18)
conj_and(Air-13, serve-18)
det(basis-21, a-20)
prep_as(serve-18, basis-21)
prep_for(charged-3, rule-23)
amod(rule-23, making-24)
nn(action-27, enforcement-26)
prep_for(charged-3, action-27)
conj_and(rule-23, action-27)

Write/JJ to/TO :/:

(ROOT
  (FRAG
    (ADJP (JJ Write) (TO to))
    (: :)))

root(ROOT-0, Write-1)
dep(Write-1, to-2)

Aviation/NNP Consumer/NNP Protection/NNP Div/NNP ./.

(ROOT
  (NP (NNP Aviation) (NNP Consumer) (NNP Protection) (NNP Div) (. .)))

nn(Div-4, Aviation-1)
nn(Div-4, Consumer-2)
nn(Div-4, Protection-3)
root(ROOT-0, Div-4)

[C-75/CD ]/.

(ROOT
  (NP (CD [C-75) (. ])))

root(ROOT-0, [C-75-1)
punct([C-75-1, ]-2)

Department/NNP of/IN Transportation/NNP

(ROOT
  (NP
    (NP (NNP Department))
    (PP (IN of)
      (NP (NNP Transportation)))))

root(ROOT-0, Department-1)
prep_of(Department-1, Transportation-3)

400/CD Seventh/JJ St./NNP S.W./NNP

(ROOT
  (NP
    (NP (CD 400))
    (NP (JJ Seventh) (NNP St.) (NNP S.W.))))

root(ROOT-0, 400-1)
amod(S.W.-4, Seventh-2)
nn(S.W.-4, St.-3)
dep(400-1, S.W.-4)

Washington/NNP ,/, DC/NNP 20590/CD

(ROOT
  (NP
    (NP (NNP Washington))
    (, ,)
    (NP (NNP DC) (CD 20590))))

root(ROOT-0, Washington-1)
appos(Washington-1, DC-3)
num(DC-3, 20590-4)

NYT-12-17-00/CD 2307EST/CD

(ROOT
  (FRAG
    (NP (CD NYT-12-17-00) (CD 2307EST))))

num(2307EST-2, NYT-12-17-00-1)
root(ROOT-0, 2307EST-2)

